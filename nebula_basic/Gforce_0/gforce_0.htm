
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: #999;
  stroke-opacity: .2;
}

.text{

}

.crtl{
width : 960px;

}

</style>
<body>
<script src="../js/d3_v3.js"></script>
<script src="../js/jquery-2.1.0.min.js"></script>
<script>

var test = [] 

var width = 960,
    height = 500;

var color = d3.scale.category20();

var force = d3.layout.force()
    .on("tick", tick)
    .charge(-120)
    .linkDistance(100)
    .size([width, height]);

var button = d3.select("body").append("div")
      .attr("class", "ctrl")
      .attr("font-family", "Arial")
      .attr("fill-opacity", 0.9)
      .attr("font-size", 15)
      .attr("id", "top_b1")
      .text("adding...");

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("../data/miserables.json", function(error, graph) {
 root = graph
  update();
});
  
function update(){
  force
      .nodes(root.nodes)
      .links(root.links)
      .start();

  console.log(root.nodes);

  link = svg.selectAll(".link")
      .data(root.links);
    
  link.enter().insert("svg:line", ".link")
      .attr("class", "link")
  
  link.exit().remove();

  
  
  node = svg.selectAll(".node")
      .data(root.nodes);

  node.enter().append("svg:circle")
      .attr("class", "node")

  node.attr("r", function(d) {return (9 - d.group + 1)/1.5})
      .on("click", click_add)
      //.on("mouseover", mouseover);
      //.style("fill", function(d) { return color(d.group); })
      .call(force.drag);
  node.exit().remove();
      
  d3.select(".text").remove();
  
  textA = svg.selectAll(".text")
      .data(root.nodes);
  
  textA.enter().append("svg:text");
      textA.attr("x", function(d) { return d.x; })
      .attr("y", function(d) { return d.y; })
      .attr("class", "text")
      .attr("font-family", "Arial")
      .attr("fill-opacity", 0.9)
      .attr("font-size", 13)
      //.on("click", click_)
     // .text(function(d){return d.name})
      .text(function(d) {return (d.group == 2)?d.name:''});
  
  textA.exit().remove();


}

function tick() {
  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

  node.attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });

  textA.attr("x", function(d) { return d.x; })
      .attr("y", function(d) { return d.y; })
}

function click_add(d) {
  console.log(d.name)
  current_0 = "纽约";
  current_1 = "上海";
  target = {"name":current_0, group:2, "x":d.x, "y":d.y, "px":d.px, "py":d.py, "fixed":0, "weight":3};
  target1 = {"name":current_1, group:2, "x":d.x, "y":d.y, "px":d.px, "py":d.py, "fixed":0, "weight":3};
  root["nodes"].push(target);
  root["nodes"].push(target1);
  root["links"].push({"target":d.index,"source":root["nodes"][root["nodes"].length -2], "value":1});
  root["links"].push({"target":d.index,"source":root["nodes"][root["nodes"].length -1], "value":1});
  update();
}

function click_del(d) {

  console.log(d.name);
  
  root.nodes.splice(d.index,1);
  console.log(root.nodes);
  
  var adj = [];
  var o_adjl;
  var vn = 0
  for (i = 0; i < root.links.length; i++){
    td = root.links[i];
    if(td.source.name == d.name||td.target.name == d.name){adj.push(i)}
  };

  o_adjl = adj.length;

  for (i = 0; i < o_adjl; i++){
    root.links.splice(adj[i]-vn, 1);
    vn++;
  }
  update();
}


function mouseover(d) {
  node.append("svg:text")
  .attr("x", d.x)
  .attr("y", d.y)
  .text("test");
  //console.log(d.x + d.y + d.name);
}

</script>
<script type="text/javascript" >
        $("#top_b1").bind("click", function() {$("#top_b1").hide();$(".ctrl").append("div");}); 
</script>