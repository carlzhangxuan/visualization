
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: #999;
  stroke-opacity: .6;
}

</style>
<body>
<script src="../js/d3_v3.js"></script>
<script>

var test = [] 

var width = 960,
    height = 500;

var color = d3.scale.category20();

var force = d3.layout.force()
    .on("tick", tick)
    .charge(-120)
    .linkDistance(30)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("../data/miserables.json", function(error, graph) {
 root = graph
 namecon = graph.nodes;
 console.log(namecon);
  update();
});
  
function update(){
  force
      .nodes(root.nodes)
      .links(root.links)
      .start();

  link = svg.selectAll(".link")
      .data(root.links);
    link.enter().insert("svg:line", ".node")
      .attr("class", "link")
  
   link.exit().remove();
  
  node = svg.selectAll(".node")
      .data(root.nodes);

  console.log(root.nodes);
  node.enter().append("svg:circle")
      .attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; })
      .attr("class", "node")
      .attr("r", 15)
      .on("click", click)
      //.call(force.drag);

  node.append("title")
    .text(function(d) { return d.index; });
    node.exit().remove();
}

function tick() {
  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

  node.attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; });
}

function click(d) {
  //console.log(d);
  console.log(d.name)
  /*
  current = "test";
  target = {"name":current, group:1, "x":d.x, "y":d.y, "px":d.px, "py":d.py, "fixed":0, "weight":3};
  target1 = {"name":current, group:1, "x":d.x, "y":d.y, "px":d.px, "py":d.py, "fixed":0, "weight":3};
  root["nodes"].push(target);
  root["nodes"].push(target1);
  root["links"].push({"target":d.index,"source":root["nodes"][root["nodes"].length -2], "value":1});
  root["links"].push({"target":d.index,"source":root["nodes"][root["nodes"].length -1], "value":1});*/
  root.nodes.splice(d.index, 1);
  var adj = [];
  var o_adjl;
  var vn = 0
  for (i = 0; i < root.links.length; i++){
    td = root.links[i];
    if(td.source.name == d.name||td.target.name == d.name){console.log(td);adj.push(i)}
  };

  o_adjl = adj.length;

  for (i = 0; i < o_adjl; i++){
    root.links.splice(adj[i]-vn, 1);
    vn++;
  }

  //console.log(root);
  update();
  //console.log(root);
}


</script>
